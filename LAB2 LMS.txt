Q1
CREATE TABLE STUDENTS (
    STUDENT_ID INT PRIMARY KEY,
    STUDENT_NAME VARCHAR(50),
    AGE INT,
    COURSE_ID INT
);

INSERT INTO STUDENTS (STUDENT_ID, STUDENT_NAME, AGE, COURSE_ID)
VALUES
    (1, 'JOHN SMITH', 22, 1),
    (2, 'JANE DOE', 20, 2),
    (3, 'ROBERT JOHNSON', 25, 1),
    (4, 'LISA WANG', 21, 3),
    (5, 'MICHAEL BROWN', 32, 2);

CREATE TABLE COURSES (
    COURSE_ID INT PRIMARY KEY,
    COURSE_NAME VARCHAR(50)
);

INSERT INTO COURSES (COURSE_ID, COURSE_NAME)
VALUES
    (1, 'MATH'),
    (2, 'HISTORY'),
    (3, 'SCIENCE');

SELECT 
    STUDENTS.STUDENT_NAME, 
    COURSES.COURSE_NAME
FROM 
    STUDENTS
JOIN 
    COURSES ON STUDENTS.COURSE_ID = COURSES.COURSE_ID;


SELECT 
    COURSES.COURSE_NAME, 
    COUNT(STUDENTS.STUDENT_ID) AS TOTAL_STUDENTS
FROM 
    COURSES
LEFT JOIN 
    STUDENTS ON COURSES.COURSE_ID = STUDENTS.COURSE_ID
GROUP BY 
    COURSES.COURSE_NAME;

SELECT 
    STUDENT_NAME 
FROM 
    STUDENTS
WHERE 
    AGE > 21;


SELECT 
    COURSES.COURSE_NAME, 
    AVG(STUDENTS.AGE) AS AVERAGE_AGE
FROM 
    STUDENTS
JOIN 
    COURSES ON STUDENTS.COURSE_ID = COURSES.COURSE_ID
GROUP BY 
    COURSES.COURSE_NAME;


SELECT 
    COURSES.COURSE_NAME
FROM 
    COURSES
JOIN 
    STUDENTS ON COURSES.COURSE_ID = STUDENTS.COURSE_ID
GROUP BY 
    COURSES.COURSE_NAME
ORDER BY 
    COUNT(STUDENTS.STUDENT_ID) DESC
    LIMIT 1;








Q2
CREATE TABLE STUDENTS (
    STUDENT_ID INT PRIMARY KEY,
    STUDENT_NAME VARCHAR(50),
    AGE INT,
    COURSE_ID INT
);

INSERT INTO STUDENTS (STUDENT_ID, STUDENT_NAME, AGE, COURSE_ID)
VALUES
    (1, 'JOHN SMITH', 22, 1),
    (2, 'JANE DOE', 20, 2),
    (3, 'ROBERT JOHNSON', 25, 1),
    (4, 'LISA WANG', 21, 3),
    (5, 'MICHAEL BROWN', 32, 2);

CREATE TABLE COURSES (
    COURSE_ID INT PRIMARY KEY,
    COURSE_NAME VARCHAR(50)
);

INSERT INTO COURSES (COURSE_ID, COURSE_NAME)
VALUES
    (1, 'MATH'),
    (2, 'HISTORY'),
    (3, 'SCIENCE');

SELECT 
    STUDENTS.STUDENT_NAME, 
    COURSES.COURSE_NAME
FROM 
    STUDENTS
JOIN 
    COURSES ON STUDENTS.COURSE_ID = COURSES.COURSE_ID;


SELECT 
    COURSES.COURSE_NAME, 
    COUNT(STUDENTS.STUDENT_ID) AS TOTAL_STUDENTS
FROM 
    COURSES
LEFT JOIN 
    STUDENTS ON COURSES.COURSE_ID = STUDENTS.COURSE_ID
GROUP BY 
    COURSES.COURSE_NAME;

SELECT 
    STUDENT_NAME 
FROM 
    STUDENTS
WHERE 
    AGE > 21;


SELECT 
    COURSES.COURSE_NAME, 
    AVG(STUDENTS.AGE) AS AVERAGE_AGE
FROM 
    STUDENTS
JOIN 
    COURSES ON STUDENTS.COURSE_ID = COURSES.COURSE_ID
GROUP BY 
    COURSES.COURSE_NAME;


SELECT 
    COURSES.COURSE_NAME
FROM 
    COURSES
JOIN 
    STUDENTS ON COURSES.COURSE_ID = STUDENTS.COURSE_ID
GROUP BY 
    COURSES.COURSE_NAME
ORDER BY 
    COUNT(STUDENTS.STUDENT_ID) DESC
    LIMIT 1;
